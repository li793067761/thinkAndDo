<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.chales.dos.dao.userLoginInfoMapper" >
  <resultMap id="BaseResultMap" type="com.chales.dos.entities.userLoginInfo" >
    <id column="user_id" property="userId" jdbcType="BIGINT" />
    <result column="user_info_id" property="userInfoId" jdbcType="BIGINT" />
    <result column="user_login_name" property="userLoginName" jdbcType="VARCHAR" />
    <result column="user_login_pwd" property="userLoginPwd" jdbcType="VARCHAR" />
    <result column="age" property="age" jdbcType="INTEGER" />
    <result column="gender" property="gender" jdbcType="TINYINT" />
    <result column="tel" property="tel" jdbcType="VARCHAR" />
    <result column="user_status" property="userStatus" jdbcType="TINYINT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    user_id, user_info_id, user_login_name, user_login_pwd, age, gender, tel, user_status
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.chales.dos.entities.userLoginInfoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from userlogininfo
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from userlogininfo
    where user_id = #{userId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from userlogininfo
    where user_id = #{userId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.chales.dos.entities.userLoginInfoExample" >
    delete from userlogininfo
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.chales.dos.entities.userLoginInfo" >
    insert into userlogininfo (user_id, user_info_id, user_login_name, 
      user_login_pwd, age, gender, 
      tel, user_status)
    values (#{userId,jdbcType=BIGINT}, #{userInfoId,jdbcType=BIGINT}, #{userLoginName,jdbcType=VARCHAR}, 
      #{userLoginPwd,jdbcType=VARCHAR}, #{age,jdbcType=INTEGER}, #{gender,jdbcType=TINYINT}, 
      #{tel,jdbcType=VARCHAR}, #{userStatus,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="com.chales.dos.entities.userLoginInfo" >
    insert into userlogininfo
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        user_id,
      </if>
      <if test="userInfoId != null" >
        user_info_id,
      </if>
      <if test="userLoginName != null" >
        user_login_name,
      </if>
      <if test="userLoginPwd != null" >
        user_login_pwd,
      </if>
      <if test="age != null" >
        age,
      </if>
      <if test="gender != null" >
        gender,
      </if>
      <if test="tel != null" >
        tel,
      </if>
      <if test="userStatus != null" >
        user_status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="userInfoId != null" >
        #{userInfoId,jdbcType=BIGINT},
      </if>
      <if test="userLoginName != null" >
        #{userLoginName,jdbcType=VARCHAR},
      </if>
      <if test="userLoginPwd != null" >
        #{userLoginPwd,jdbcType=VARCHAR},
      </if>
      <if test="age != null" >
        #{age,jdbcType=INTEGER},
      </if>
      <if test="gender != null" >
        #{gender,jdbcType=TINYINT},
      </if>
      <if test="tel != null" >
        #{tel,jdbcType=VARCHAR},
      </if>
      <if test="userStatus != null" >
        #{userStatus,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.chales.dos.entities.userLoginInfoExample" resultType="java.lang.Integer" >
    select count(*) from userlogininfo
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update userlogininfo
    <set >
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.userInfoId != null" >
        user_info_id = #{record.userInfoId,jdbcType=BIGINT},
      </if>
      <if test="record.userLoginName != null" >
        user_login_name = #{record.userLoginName,jdbcType=VARCHAR},
      </if>
      <if test="record.userLoginPwd != null" >
        user_login_pwd = #{record.userLoginPwd,jdbcType=VARCHAR},
      </if>
      <if test="record.age != null" >
        age = #{record.age,jdbcType=INTEGER},
      </if>
      <if test="record.gender != null" >
        gender = #{record.gender,jdbcType=TINYINT},
      </if>
      <if test="record.tel != null" >
        tel = #{record.tel,jdbcType=VARCHAR},
      </if>
      <if test="record.userStatus != null" >
        user_status = #{record.userStatus,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update userlogininfo
    set user_id = #{record.userId,jdbcType=BIGINT},
      user_info_id = #{record.userInfoId,jdbcType=BIGINT},
      user_login_name = #{record.userLoginName,jdbcType=VARCHAR},
      user_login_pwd = #{record.userLoginPwd,jdbcType=VARCHAR},
      age = #{record.age,jdbcType=INTEGER},
      gender = #{record.gender,jdbcType=TINYINT},
      tel = #{record.tel,jdbcType=VARCHAR},
      user_status = #{record.userStatus,jdbcType=TINYINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.chales.dos.entities.userLoginInfo" >
    update userlogininfo
    <set >
      <if test="userInfoId != null" >
        user_info_id = #{userInfoId,jdbcType=BIGINT},
      </if>
      <if test="userLoginName != null" >
        user_login_name = #{userLoginName,jdbcType=VARCHAR},
      </if>
      <if test="userLoginPwd != null" >
        user_login_pwd = #{userLoginPwd,jdbcType=VARCHAR},
      </if>
      <if test="age != null" >
        age = #{age,jdbcType=INTEGER},
      </if>
      <if test="gender != null" >
        gender = #{gender,jdbcType=TINYINT},
      </if>
      <if test="tel != null" >
        tel = #{tel,jdbcType=VARCHAR},
      </if>
      <if test="userStatus != null" >
        user_status = #{userStatus,jdbcType=TINYINT},
      </if>
    </set>
    where user_id = #{userId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.chales.dos.entities.userLoginInfo" >
    update userlogininfo
    set user_info_id = #{userInfoId,jdbcType=BIGINT},
      user_login_name = #{userLoginName,jdbcType=VARCHAR},
      user_login_pwd = #{userLoginPwd,jdbcType=VARCHAR},
      age = #{age,jdbcType=INTEGER},
      gender = #{gender,jdbcType=TINYINT},
      tel = #{tel,jdbcType=VARCHAR},
      user_status = #{userStatus,jdbcType=TINYINT}
    where user_id = #{userId,jdbcType=BIGINT}
  </update>
 <select id="selectLoginUserInfo" parameterType="map" resultMap="BaseResultMap">
 	select <include refid="Base_Column_List" /> from userlogininfo
 	where user_login_name = #{userLoginName,jdbcType=VARCHAR} and user_login_pwd = #{userLoginPwd,jdbcType=VARCHAR}
 </select>
</mapper>